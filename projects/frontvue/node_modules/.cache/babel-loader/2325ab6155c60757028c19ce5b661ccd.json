{"remainingRequest":"C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-quill\\src\\Quill.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-quill\\src\\Quill.vue","mtime":1653934183271},{"path":"C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\babel.config.js","mtime":1648859265342},{"path":"C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648859275688},{"path":"C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\babel-loader\\lib\\index.js","mtime":1648859273492},{"path":"C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648859275688},{"path":"C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-loader\\lib\\index.js","mtime":1648859291446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwovLwovLwovLwovLwovLwovLwppbXBvcnQgZGVmYXVsdHNEZWVwIGZyb20gJ2xvZGFzaC5kZWZhdWx0c2RlZXAnOwppbXBvcnQgUXVpbGwgZnJvbSAncXVpbGwnOwppbXBvcnQgR3JhbW1hcmx5SW5saW5lIGZyb20gJy4vZm9ybWF0cy9HcmFtbWFybHlJbmxpbmUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbW9kZWw6IHsKICAgIHByb3A6ICdjb250ZW50JwogIH0sCiAgcHJvcHM6IHsKICAgIGNvbnRlbnQ6IHt9LAogICAgZm9ybWF0czogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICB9LAogICAga2V5QmluZGluZ3M6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKICAgIG91dHB1dDogewogICAgICBkZWZhdWx0OiAnZGVsdGEnCiAgICB9LAogICAgYnVzOiB7CiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgY29uZmlnOiB7CiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVkaXRvcjoge30sCiAgICAgIGRlZmF1bHRDb25maWc6IHsKICAgICAgICBtb2R1bGVzOiB7CiAgICAgICAgICB0b29sYmFyOiBbWydib2xkJywgJ2l0YWxpYycsICd1bmRlcmxpbmUnXSwgW3sKICAgICAgICAgICAgJ2xpc3QnOiAnb3JkZXJlZCcKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgJ2xpc3QnOiAnYnVsbGV0JwogICAgICAgICAgfV0sIFt7CiAgICAgICAgICAgICdhbGlnbic6IFtdCiAgICAgICAgICB9XV0KICAgICAgICB9LAogICAgICAgIHRoZW1lOiAnc25vdycKICAgICAgfQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIGlmICh0aGlzLmtleUJpbmRpbmdzLmxlbmd0aCkgewogICAgICB0aGlzLmRlZmF1bHRDb25maWcubW9kdWxlcy5rZXlib2FyZCA9IHsKICAgICAgICBiaW5kaW5nczogdGhpcy5rZXlCaW5kaW5ncy5tYXAoZnVuY3Rpb24gKGJpbmRpbmcpIHsKICAgICAgICAgIGlmIChiaW5kaW5nLnJlbW92ZSkgcmV0dXJuIGZhbHNlOwogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAga2V5OiBiaW5kaW5nLmtleSwKICAgICAgICAgICAgbWV0YUtleTogdHJ1ZSwKICAgICAgICAgICAgaGFuZGxlcjogYmluZGluZy5tZXRob2QuYmluZChfdGhpcykKICAgICAgICAgIH07CiAgICAgICAgfSkKICAgICAgfTsKICAgIH0KCiAgICBpZiAodGhpcy5jb25maWcubW9kdWxlcyAmJiB0aGlzLmNvbmZpZy5tb2R1bGVzLnRvb2xiYXIpIHsKICAgICAgdGhpcy5kZWZhdWx0Q29uZmlnLm1vZHVsZXMudG9vbGJhciA9IFtdOwogICAgfQoKICAgIFF1aWxsLnJlZ2lzdGVyKEdyYW1tYXJseUlubGluZSk7CiAgICB0aGlzLmVkaXRvciA9IG5ldyBRdWlsbCh0aGlzLiRyZWZzLnF1aWxsLCBkZWZhdWx0c0RlZXAodGhpcy5jb25maWcsIHRoaXMuZGVmYXVsdENvbmZpZykpOwoKICAgIGlmICh0aGlzLmNvbnRlbnQgJiYgdGhpcy5jb250ZW50ICE9PSAnJykgewogICAgICBpZiAodGhpcy5vdXRwdXQgIT0gJ2RlbHRhJykgewogICAgICAgIHRoaXMuZWRpdG9yLnBhc3RlSFRNTCh0aGlzLmNvbnRlbnQpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZWRpdG9yLnNldENvbnRlbnRzKHRoaXMuY29udGVudCk7CiAgICAgIH0KICAgIH0KCiAgICB0aGlzLmVkaXRvci5vbigndGV4dC1jaGFuZ2UnLCBmdW5jdGlvbiAoZGVsdGEsIHNvdXJjZSkgewogICAgICBfdGhpcy4kZW1pdCgndGV4dC1jaGFuZ2UnLCBfdGhpcy5lZGl0b3IsIGRlbHRhLCBzb3VyY2UpOwoKICAgICAgaWYgKF90aGlzLmVkaXRvci5nZXRUZXh0KCkubGVuZ3RoIDw9IDEpIHsKICAgICAgICBfdGhpcy4kZW1pdCgnaW5wdXQnLCAnJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgX3RoaXMuJGVtaXQoJ2lucHV0JywgX3RoaXMub3V0cHV0ICE9ICdkZWx0YScgPyBfdGhpcy5lZGl0b3Iucm9vdC5pbm5lckhUTUwgOiBfdGhpcy5lZGl0b3IuZ2V0Q29udGVudHMoKSk7CiAgICAgIH0KICAgIH0pOwogICAgdGhpcy5lZGl0b3Iub24oJ3NlbGVjdGlvbi1jaGFuZ2UnLCBmdW5jdGlvbiAocmFuZ2UpIHsKICAgICAgX3RoaXMuJGVtaXQoJ3NlbGVjdGlvbi1jaGFuZ2UnLCBfdGhpcy5lZGl0b3IsIHJhbmdlKTsKICAgIH0pOwoKICAgIGlmICh0aGlzLmJ1cykgewogICAgICB0aGlzLmJ1cy4kb24oJ2ZvY3VzLWVkaXRvcicsIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMuZm9jdXNFZGl0b3IoKTsKICAgICAgfSk7CiAgICAgIHRoaXMuYnVzLiRvbignc2V0LWNvbnRlbnQnLCBmdW5jdGlvbiAoY29udGVudCkgewogICAgICAgIHJldHVybiBfdGhpcy5lZGl0b3Iuc2V0Q29udGVudHMoY29udGVudCk7CiAgICAgIH0pOwogICAgICB0aGlzLmJ1cy4kb24oJ3NldC1odG1sJywgZnVuY3Rpb24gKGh0bWwpIHsKICAgICAgICBpZiAoIWh0bWwgfHwgaHRtbCA9PT0gJycpIHJldHVybjsKICAgICAgICBfdGhpcy5lZGl0b3Iucm9vdC5pbm5lckhUTUwgPSBodG1sOwogICAgICB9KTsKICAgIH0KCiAgICB0aGlzLiRvbignZm9jdXMtZWRpdG9yJywgZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX3RoaXMuZm9jdXNFZGl0b3IoKTsKICAgIH0pOwogICAgdGhpcy4kb24oJ3NldC1jb250ZW50JywgZnVuY3Rpb24gKGNvbnRlbnQpIHsKICAgICAgcmV0dXJuIF90aGlzLmVkaXRvci5zZXRDb250ZW50cyhjb250ZW50KTsKICAgIH0pOwogICAgdGhpcy4kb24oJ3NldC1odG1sJywgZnVuY3Rpb24gKGh0bWwpIHsKICAgICAgaWYgKCFodG1sIHx8IGh0bWwgPT09ICcnKSByZXR1cm47CiAgICAgIF90aGlzLmVkaXRvci5yb290LmlubmVySFRNTCA9IGh0bWw7CiAgICB9KTsKICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIHNlbGVjdG9ycyA9IFsnYnV0dG9uJywgJy5xbC1waWNrZXItbGFiZWwnLCAnLnFsLXBpY2tlci1pdGVtJ107CgogICAgICB2YXIgdG9vbGJhciA9IF90aGlzLiRlbC5xdWVyeVNlbGVjdG9yKCcucWwtdG9vbGJhcicpOwoKICAgICAgc2VsZWN0b3JzLmZvckVhY2goZnVuY3Rpb24gKHNlbGVjdG9yKSB7CiAgICAgICAgdG9vbGJhci5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKS5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgICBlbGVtZW50LnRhYkluZGV4ID0gLTE7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBmb2N1c0VkaXRvcjogZnVuY3Rpb24gZm9jdXNFZGl0b3IoZSkgewogICAgICBpZiAoZSAmJiBlLnNyY0VsZW1lbnQpIHsKICAgICAgICB2YXIgY2xhc3NMaXN0ID0gZS5zcmNFbGVtZW50LmNsYXNzTGlzdCwKICAgICAgICAgICAgaXNTZWdtZW50ID0gZmFsc2U7CiAgICAgICAgY2xhc3NMaXN0LmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZSkgewogICAgICAgICAgaWYgKGNsYXNzTmFtZSA9PT0gJ3NlZ21lbnQnKSB7CiAgICAgICAgICAgIGlzU2VnbWVudCA9IHRydWU7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBpZiAoIWlzU2VnbWVudCkgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLmVkaXRvci5mb2N1cygpOwogICAgICB0aGlzLmVkaXRvci5zZXRTZWxlY3Rpb24odGhpcy5lZGl0b3IuZ2V0TGVuZ3RoKCkgLSAxLCB0aGlzLmVkaXRvci5nZXRMZW5ndGgoKSk7CiAgICB9CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgaWYgKHRoaXMuYnVzKSB7CiAgICAgIHRoaXMuYnVzLiRvZmYoJ2ZvY3VzLWVkaXRvcicpOwogICAgICB0aGlzLmJ1cy4kb2ZmKCdzZXQtY29udGVudCcpOwogICAgICB0aGlzLmJ1cy4kb2ZmKCdzZXQtaHRtbCcpOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;AAOA;AACA;AACA;AAEA;AACAA;AACAC;AADA,GADA;AAKAC;AACAC,eADA;AAGAC;AACAC,iBADA;AAEAC,aAFA,sBAEA;AACA;AACA;AAJA,KAHA;AAUAC;AACAF,iBADA;AAEAC,aAFA,sBAEA;AACA;AACA;AAJA,KAVA;AAiBAE;AACAF;AADA,KAjBA;AAqBAG;AACAH;AADA,KArBA;AAyBAI;AACAJ,aADA,sBACA;AACA;AACA;AAHA;AAzBA,GALA;AAqCAK,MArCA,kBAqCA;AACA;AACAC,gBADA;AAEAC;AACAC;AACAC,oBACA,+BADA,EAEA,CACA;AAAA;AAAA,WADA,EACA;AAAA;AAAA,WADA,CAFA,EAKA;AAAA;AAAA,YALA;AADA,SADA;AAUAC;AAVA;AAFA;AAeA,GArDA;AAuDAC,SAvDA,qBAuDA;AAAA;;AACA;AACA;AACAC;AACA;AACA;AACAC,4BADA;AAEAC,yBAFA;AAGAC;AAHA;AAKA,SAPA;AADA;AAUA;;AAEA;AACA;AACA;;AAEAC;AAEA;;AAEA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KAPA;AASA;AACA;AACA,KAFA;;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA,OAJA;AAKA;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA,KAJA;AAMA;AACA;;AACA;;AACAC;AACAR;AACAS;AACA,SAFA;AAGA,OAJA;AAKA,KARA;AASA,GA7HA;AA+HAC;AACAC,eADA,uBACAC,CADA,EACA;AACA;AACA;AAAA,YACAC,iBADA;AAGAC;AACA;AACAD;AACA;AACA;AACA,SALA;AAOA;AACA;;AAEA;AACA;AACA;AAlBA,GA/HA;AAoJAE,eApJA,2BAoJA;AACA;AACA;AACA;AACA;AACA;AACA;AA1JA","names":["model","prop","props","content","formats","type","default","keyBindings","output","bus","config","data","editor","defaultConfig","modules","toolbar","theme","mounted","bindings","key","metaKey","handler","Quill","selectors","element","methods","focusEditor","e","isSegment","classList","beforeDestroy"],"sourceRoot":"node_modules/vue-quill/src","sources":["Quill.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"ui attached segment\" ref=\"quill\" @click.prevent=\"focusEditor\"></div>\n    </div>\n</template>\n\n<script>\n    import defaultsDeep from 'lodash.defaultsdeep'\n    import Quill from 'quill'\n    import GrammarlyInline from './formats/GrammarlyInline'\n\n    export default {\n        model: {\n            prop: 'content',\n        },\n\n        props: {\n            content: {},\n\n            formats: {\n                type: Array,\n                default() {\n                    return []\n                },\n            },\n\n            keyBindings: {\n                type: Array,\n                default() {\n                    return []\n                },\n            },\n\n            output: {\n                default : 'delta'\n            },\n\n            bus: {\n                default: false,\n            },\n\n            config: {\n                default() {\n                    return {}\n                },\n            },\n        },\n\n        data() {\n            return {\n                editor: {},\n                defaultConfig: {\n                    modules: {\n                        toolbar: [\n                            ['bold', 'italic', 'underline'],\n                            [\n                               { 'list': 'ordered' }, { 'list': 'bullet' }\n                            ],\n                            [{ 'align': [] }],\n                        ],\n                    },\n                    theme: 'snow',\n                },\n            }\n        },\n\n        mounted() {\n            if (this.keyBindings.length) {\n                this.defaultConfig.modules.keyboard = {\n                    bindings: this.keyBindings.map((binding) => {\n                        if (binding.remove) return false\n                        return {\n                            key: binding.key,\n                            metaKey: true,\n                            handler: binding.method.bind(this),\n                        }\n                    })\n                }\n            }\n\n            if (this.config.modules && this.config.modules.toolbar) {\n                this.defaultConfig.modules.toolbar = []\n            }\n\n            Quill.register(GrammarlyInline)\n\n            this.editor = new Quill(this.$refs.quill, defaultsDeep(this.config, this.defaultConfig))\n\n            if (this.content && this.content !== '') {\n\t            if (this.output != 'delta') {\n\t                this.editor.pasteHTML(this.content)\n\t            } else {\n\t                this.editor.setContents(this.content)\n\t            }\n            }\n\n            this.editor.on('text-change', (delta, source) => {\n                this.$emit('text-change', this.editor, delta, source)\n                if (this.editor.getText().length <= 1) {\n                  this.$emit('input', '')\n                } else {\n                  this.$emit('input', this.output != 'delta' ? this.editor.root.innerHTML : this.editor.getContents())\n                }\n            })\n\n            this.editor.on('selection-change', (range) => {\n                this.$emit('selection-change', this.editor, range)\n            })\n\n            if (this.bus) {\n                this.bus.$on('focus-editor', () => this.focusEditor())\n                this.bus.$on('set-content', (content) => this.editor.setContents(content))\n                this.bus.$on('set-html', (html) => {\n                    if (!html || html === '') return\n\n                    this.editor.root.innerHTML = html\n                })\n            }\n\n            this.$on('focus-editor', () => this.focusEditor())\n            this.$on('set-content', (content) => this.editor.setContents(content))\n            this.$on('set-html', (html) => {\n                if (!html || html === '') return\n\n                this.editor.root.innerHTML = html\n            })\n\n            this.$nextTick(() => {\n                const selectors = ['button', '.ql-picker-label', '.ql-picker-item']\n                const toolbar = this.$el.querySelector('.ql-toolbar')\n                selectors.forEach((selector) => {\n                    toolbar.querySelectorAll(selector).forEach((element) => {\n                        element.tabIndex = -1\n                    })\n                })\n            })\n        },\n\n        methods: {\n            focusEditor(e) {\n                if (e && e.srcElement) {\n                    let classList = e.srcElement.classList,\n                        isSegment = false\n\n                    classList.forEach((className) => {\n                        if (className === 'segment') {\n                            isSegment = true\n                            return\n                        }\n                    })\n\n                    if (!isSegment) return\n                }\n\n                this.editor.focus()\n                this.editor.setSelection(this.editor.getLength()-1, this.editor.getLength())\n            }\n        },\n\n        beforeDestroy() {\n            if (this.bus) {\n                this.bus.$off('focus-editor')\n                this.bus.$off('set-content')\n                this.bus.$off('set-html')\n            }\n        },\n    }\n</script>\n"]}]}