{"remainingRequest":"C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\src\\views\\Replic.vue?vue&type=template&id=3d2a61fa&scoped=true&","dependencies":[{"path":"C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\src\\views\\Replic.vue","mtime":1647975038746},{"path":"C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}