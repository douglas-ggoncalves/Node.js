{"remainingRequest":"C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-quill\\src\\Quill.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-quill\\src\\Quill.vue","mtime":1653934183271},{"path":"C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648859275688},{"path":"C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\babel-loader\\lib\\index.js","mtime":1648859273492},{"path":"C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648859275688},{"path":"C:\\Users\\SSD\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-loader\\lib\\index.js","mtime":1648859291446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCiAgICBpbXBvcnQgZGVmYXVsdHNEZWVwIGZyb20gJ2xvZGFzaC5kZWZhdWx0c2RlZXAnCiAgICBpbXBvcnQgUXVpbGwgZnJvbSAncXVpbGwnCiAgICBpbXBvcnQgR3JhbW1hcmx5SW5saW5lIGZyb20gJy4vZm9ybWF0cy9HcmFtbWFybHlJbmxpbmUnCgogICAgZXhwb3J0IGRlZmF1bHQgewogICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgIHByb3A6ICdjb250ZW50JywKICAgICAgICB9LAoKICAgICAgICBwcm9wczogewogICAgICAgICAgICBjb250ZW50OiB7fSwKCiAgICAgICAgICAgIGZvcm1hdHM6IHsKICAgICAgICAgICAgICAgIHR5cGU6IEFycmF5LAogICAgICAgICAgICAgICAgZGVmYXVsdCgpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gW10KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCgogICAgICAgICAgICBrZXlCaW5kaW5nczogewogICAgICAgICAgICAgICAgdHlwZTogQXJyYXksCiAgICAgICAgICAgICAgICBkZWZhdWx0KCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBbXQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIG91dHB1dDogewogICAgICAgICAgICAgICAgZGVmYXVsdCA6ICdkZWx0YScKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIGJ1czogewogICAgICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICAgICAgICAgIH0sCgogICAgICAgICAgICBjb25maWc6IHsKICAgICAgICAgICAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHt9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgIH0sCgogICAgICAgIGRhdGEoKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBlZGl0b3I6IHt9LAogICAgICAgICAgICAgICAgZGVmYXVsdENvbmZpZzogewogICAgICAgICAgICAgICAgICAgIG1vZHVsZXM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdG9vbGJhcjogWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgWydib2xkJywgJ2l0YWxpYycsICd1bmRlcmxpbmUnXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgJ2xpc3QnOiAnb3JkZXJlZCcgfSwgeyAnbGlzdCc6ICdidWxsZXQnIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbeyAnYWxpZ24nOiBbXSB9XSwKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHRoZW1lOiAnc25vdycsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgbW91bnRlZCgpIHsKICAgICAgICAgICAgaWYgKHRoaXMua2V5QmluZGluZ3MubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICB0aGlzLmRlZmF1bHRDb25maWcubW9kdWxlcy5rZXlib2FyZCA9IHsKICAgICAgICAgICAgICAgICAgICBiaW5kaW5nczogdGhpcy5rZXlCaW5kaW5ncy5tYXAoKGJpbmRpbmcpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGJpbmRpbmcucmVtb3ZlKSByZXR1cm4gZmFsc2UKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogYmluZGluZy5rZXksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRhS2V5OiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlcjogYmluZGluZy5tZXRob2QuYmluZCh0aGlzKSwKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICh0aGlzLmNvbmZpZy5tb2R1bGVzICYmIHRoaXMuY29uZmlnLm1vZHVsZXMudG9vbGJhcikgewogICAgICAgICAgICAgICAgdGhpcy5kZWZhdWx0Q29uZmlnLm1vZHVsZXMudG9vbGJhciA9IFtdCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIFF1aWxsLnJlZ2lzdGVyKEdyYW1tYXJseUlubGluZSkKCiAgICAgICAgICAgIHRoaXMuZWRpdG9yID0gbmV3IFF1aWxsKHRoaXMuJHJlZnMucXVpbGwsIGRlZmF1bHRzRGVlcCh0aGlzLmNvbmZpZywgdGhpcy5kZWZhdWx0Q29uZmlnKSkKCiAgICAgICAgICAgIGlmICh0aGlzLmNvbnRlbnQgJiYgdGhpcy5jb250ZW50ICE9PSAnJykgewoJICAgICAgICAgICAgaWYgKHRoaXMub3V0cHV0ICE9ICdkZWx0YScpIHsKCSAgICAgICAgICAgICAgICB0aGlzLmVkaXRvci5wYXN0ZUhUTUwodGhpcy5jb250ZW50KQoJICAgICAgICAgICAgfSBlbHNlIHsKCSAgICAgICAgICAgICAgICB0aGlzLmVkaXRvci5zZXRDb250ZW50cyh0aGlzLmNvbnRlbnQpCgkgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRoaXMuZWRpdG9yLm9uKCd0ZXh0LWNoYW5nZScsIChkZWx0YSwgc291cmNlKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCd0ZXh0LWNoYW5nZScsIHRoaXMuZWRpdG9yLCBkZWx0YSwgc291cmNlKQogICAgICAgICAgICAgICAgaWYgKHRoaXMuZWRpdG9yLmdldFRleHQoKS5sZW5ndGggPD0gMSkgewogICAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsICcnKQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLm91dHB1dCAhPSAnZGVsdGEnID8gdGhpcy5lZGl0b3Iucm9vdC5pbm5lckhUTUwgOiB0aGlzLmVkaXRvci5nZXRDb250ZW50cygpKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQoKICAgICAgICAgICAgdGhpcy5lZGl0b3Iub24oJ3NlbGVjdGlvbi1jaGFuZ2UnLCAocmFuZ2UpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3NlbGVjdGlvbi1jaGFuZ2UnLCB0aGlzLmVkaXRvciwgcmFuZ2UpCiAgICAgICAgICAgIH0pCgogICAgICAgICAgICBpZiAodGhpcy5idXMpIHsKICAgICAgICAgICAgICAgIHRoaXMuYnVzLiRvbignZm9jdXMtZWRpdG9yJywgKCkgPT4gdGhpcy5mb2N1c0VkaXRvcigpKQogICAgICAgICAgICAgICAgdGhpcy5idXMuJG9uKCdzZXQtY29udGVudCcsIChjb250ZW50KSA9PiB0aGlzLmVkaXRvci5zZXRDb250ZW50cyhjb250ZW50KSkKICAgICAgICAgICAgICAgIHRoaXMuYnVzLiRvbignc2V0LWh0bWwnLCAoaHRtbCkgPT4gewogICAgICAgICAgICAgICAgICAgIGlmICghaHRtbCB8fCBodG1sID09PSAnJykgcmV0dXJuCgogICAgICAgICAgICAgICAgICAgIHRoaXMuZWRpdG9yLnJvb3QuaW5uZXJIVE1MID0gaHRtbAogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhpcy4kb24oJ2ZvY3VzLWVkaXRvcicsICgpID0+IHRoaXMuZm9jdXNFZGl0b3IoKSkKICAgICAgICAgICAgdGhpcy4kb24oJ3NldC1jb250ZW50JywgKGNvbnRlbnQpID0+IHRoaXMuZWRpdG9yLnNldENvbnRlbnRzKGNvbnRlbnQpKQogICAgICAgICAgICB0aGlzLiRvbignc2V0LWh0bWwnLCAoaHRtbCkgPT4gewogICAgICAgICAgICAgICAgaWYgKCFodG1sIHx8IGh0bWwgPT09ICcnKSByZXR1cm4KCiAgICAgICAgICAgICAgICB0aGlzLmVkaXRvci5yb290LmlubmVySFRNTCA9IGh0bWwKICAgICAgICAgICAgfSkKCiAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdG9ycyA9IFsnYnV0dG9uJywgJy5xbC1waWNrZXItbGFiZWwnLCAnLnFsLXBpY2tlci1pdGVtJ10KICAgICAgICAgICAgICAgIGNvbnN0IHRvb2xiYXIgPSB0aGlzLiRlbC5xdWVyeVNlbGVjdG9yKCcucWwtdG9vbGJhcicpCiAgICAgICAgICAgICAgICBzZWxlY3RvcnMuZm9yRWFjaCgoc2VsZWN0b3IpID0+IHsKICAgICAgICAgICAgICAgICAgICB0b29sYmFyLnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpLmZvckVhY2goKGVsZW1lbnQpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC50YWJJbmRleCA9IC0xCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKCiAgICAgICAgbWV0aG9kczogewogICAgICAgICAgICBmb2N1c0VkaXRvcihlKSB7CiAgICAgICAgICAgICAgICBpZiAoZSAmJiBlLnNyY0VsZW1lbnQpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgY2xhc3NMaXN0ID0gZS5zcmNFbGVtZW50LmNsYXNzTGlzdCwKICAgICAgICAgICAgICAgICAgICAgICAgaXNTZWdtZW50ID0gZmFsc2UKCiAgICAgICAgICAgICAgICAgICAgY2xhc3NMaXN0LmZvckVhY2goKGNsYXNzTmFtZSkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2xhc3NOYW1lID09PSAnc2VnbWVudCcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzU2VnbWVudCA9IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSkKCiAgICAgICAgICAgICAgICAgICAgaWYgKCFpc1NlZ21lbnQpIHJldHVybgogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMuZWRpdG9yLmZvY3VzKCkKICAgICAgICAgICAgICAgIHRoaXMuZWRpdG9yLnNldFNlbGVjdGlvbih0aGlzLmVkaXRvci5nZXRMZW5ndGgoKS0xLCB0aGlzLmVkaXRvci5nZXRMZW5ndGgoKSkKICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgICAgIGJlZm9yZURlc3Ryb3koKSB7CiAgICAgICAgICAgIGlmICh0aGlzLmJ1cykgewogICAgICAgICAgICAgICAgdGhpcy5idXMuJG9mZignZm9jdXMtZWRpdG9yJykKICAgICAgICAgICAgICAgIHRoaXMuYnVzLiRvZmYoJ3NldC1jb250ZW50JykKICAgICAgICAgICAgICAgIHRoaXMuYnVzLiRvZmYoJ3NldC1odG1sJykKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICB9Cg=="},{"version":3,"sources":["Quill.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Quill.vue","sourceRoot":"node_modules/vue-quill/src","sourcesContent":["<template>\n    <div>\n        <div class=\"ui attached segment\" ref=\"quill\" @click.prevent=\"focusEditor\"></div>\n    </div>\n</template>\n\n<script>\n    import defaultsDeep from 'lodash.defaultsdeep'\n    import Quill from 'quill'\n    import GrammarlyInline from './formats/GrammarlyInline'\n\n    export default {\n        model: {\n            prop: 'content',\n        },\n\n        props: {\n            content: {},\n\n            formats: {\n                type: Array,\n                default() {\n                    return []\n                },\n            },\n\n            keyBindings: {\n                type: Array,\n                default() {\n                    return []\n                },\n            },\n\n            output: {\n                default : 'delta'\n            },\n\n            bus: {\n                default: false,\n            },\n\n            config: {\n                default() {\n                    return {}\n                },\n            },\n        },\n\n        data() {\n            return {\n                editor: {},\n                defaultConfig: {\n                    modules: {\n                        toolbar: [\n                            ['bold', 'italic', 'underline'],\n                            [\n                               { 'list': 'ordered' }, { 'list': 'bullet' }\n                            ],\n                            [{ 'align': [] }],\n                        ],\n                    },\n                    theme: 'snow',\n                },\n            }\n        },\n\n        mounted() {\n            if (this.keyBindings.length) {\n                this.defaultConfig.modules.keyboard = {\n                    bindings: this.keyBindings.map((binding) => {\n                        if (binding.remove) return false\n                        return {\n                            key: binding.key,\n                            metaKey: true,\n                            handler: binding.method.bind(this),\n                        }\n                    })\n                }\n            }\n\n            if (this.config.modules && this.config.modules.toolbar) {\n                this.defaultConfig.modules.toolbar = []\n            }\n\n            Quill.register(GrammarlyInline)\n\n            this.editor = new Quill(this.$refs.quill, defaultsDeep(this.config, this.defaultConfig))\n\n            if (this.content && this.content !== '') {\n\t            if (this.output != 'delta') {\n\t                this.editor.pasteHTML(this.content)\n\t            } else {\n\t                this.editor.setContents(this.content)\n\t            }\n            }\n\n            this.editor.on('text-change', (delta, source) => {\n                this.$emit('text-change', this.editor, delta, source)\n                if (this.editor.getText().length <= 1) {\n                  this.$emit('input', '')\n                } else {\n                  this.$emit('input', this.output != 'delta' ? this.editor.root.innerHTML : this.editor.getContents())\n                }\n            })\n\n            this.editor.on('selection-change', (range) => {\n                this.$emit('selection-change', this.editor, range)\n            })\n\n            if (this.bus) {\n                this.bus.$on('focus-editor', () => this.focusEditor())\n                this.bus.$on('set-content', (content) => this.editor.setContents(content))\n                this.bus.$on('set-html', (html) => {\n                    if (!html || html === '') return\n\n                    this.editor.root.innerHTML = html\n                })\n            }\n\n            this.$on('focus-editor', () => this.focusEditor())\n            this.$on('set-content', (content) => this.editor.setContents(content))\n            this.$on('set-html', (html) => {\n                if (!html || html === '') return\n\n                this.editor.root.innerHTML = html\n            })\n\n            this.$nextTick(() => {\n                const selectors = ['button', '.ql-picker-label', '.ql-picker-item']\n                const toolbar = this.$el.querySelector('.ql-toolbar')\n                selectors.forEach((selector) => {\n                    toolbar.querySelectorAll(selector).forEach((element) => {\n                        element.tabIndex = -1\n                    })\n                })\n            })\n        },\n\n        methods: {\n            focusEditor(e) {\n                if (e && e.srcElement) {\n                    let classList = e.srcElement.classList,\n                        isSegment = false\n\n                    classList.forEach((className) => {\n                        if (className === 'segment') {\n                            isSegment = true\n                            return\n                        }\n                    })\n\n                    if (!isSegment) return\n                }\n\n                this.editor.focus()\n                this.editor.setSelection(this.editor.getLength()-1, this.editor.getLength())\n            }\n        },\n\n        beforeDestroy() {\n            if (this.bus) {\n                this.bus.$off('focus-editor')\n                this.bus.$off('set-content')\n                this.bus.$off('set-html')\n            }\n        },\n    }\n</script>\n"]}]}