{"remainingRequest":"C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\src\\views\\Wiki\\Wiki.vue?vue&type=template&id=94264af6&","dependencies":[{"path":"C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\src\\views\\Wiki\\Wiki.vue","mtime":1651682723423},{"path":"C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Suporte Maximus\\Documents\\GitHub\\Node.js\\projects\\frontvue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygiZGl2IiwgeyBhdHRyczogeyBpZDogImFwcCIgfSB9LCBbCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIndyYXBwZXIiLCBhdHRyczogeyBpZDogIndpa2kiIH0gfSwgWwogICAgICBfYygibmF2IiwgeyBhdHRyczogeyBpZDogInNpZGViYXIiIH0gfSwgWwogICAgICAgIF9jKCJ1bCIsIHsgc3RhdGljQ2xhc3M6ICJsaXN0LXVuc3R5bGVkIGNvbXBvbmVudHMiIH0sIFsKICAgICAgICAgIF92bS5fbSgwKSwKICAgICAgICAgIF92bS5yb2xlVXNlckxvZ2dlZCA9PSAiTSIgfHwgX3ZtLnJvbGVVc2VyTG9nZ2VkID09ICJBIgogICAgICAgICAgICA/IF9jKCJsaSIsIFsKICAgICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAidXN1YXJpb3MiIH0gfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIkdlc3TDo28gZGUgVXN1w6FyaW9zIiksCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBdKQogICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgX3ZtLl9tKDEpLAogICAgICAgICAgX3ZtLl9tKDIpLAogICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiYSIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogImphdmFzY3JpcHQ6OyIgfSwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5sb2dvdXQoKQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFtfdm0uX3YoIlNhaXIiKV0KICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgeyBhdHRyczogeyBpZDogImNvbnRlbnQiIH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgIm5hdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJuYXZiYXIgbmF2YmFyLWV4cGFuZC1sZyBuYXZiYXItbGlnaHQgYmctbGlnaHQiIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lci1mbHVpZCIgfSwgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLW91dGxpbmUtZGFyayIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImJ1dHRvbiIsIGlkOiAic2lkZWJhckNvbGxhcHNlIiB9LAogICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNsaXF1ZSgpCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJuYXZiYXItdG9nZ2xlci1pY29uIiB9KV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImItY29udGFpbmVyIiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImJnLWxpZ2h0IHB5LTMiLCBhdHRyczogeyBmbHVpZDogIiIgfSB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiYi1yb3ciLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiYi1jb2wiLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciIsCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzbTogIjEwIiwgInZlcnRpY2FsLWFsaWduIjogImNlbnRlciIgfSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJoMyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIm10LTMiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgU2VqYSBiZW0gVmluZG8gIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiZm9udC1hd2Vzb21lLWljb24iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGljb246ICJmYS1zb2xpZCBmYS1iYXJzIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJoNiIsIHsgc3RhdGljQ2xhc3M6ICJtLTMiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiIEVzc2UgV2lraSDDqSB1bWEgY29sZcOnw6NvIGRlIHDDoWdpbmFzIGludGVybGlnYWRhcyBlIGNhZGEgdW1hIGRlbGFzIHBvZGUgc2VyIHZpc2l0YWRhIHBvciBxdWFscXVlciBwZXNzb2EgcG9yw6ltIGVkaXRhZGEgcGVsb3MgZnVuY2lvbsOhcmlvcyBkbyBzaXN0ZW1hIE1heGltdXMsIGFxdWkgdm9jw6ogaXLDoSBlbmNvbnRyYXIgdHV0b3JpYXMgZGFzIGZ1bsOnw7VlcyBkbyBzaXN0ZW1hICIKICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnJvbGVVc2VyTG9nZ2VkID09ICJNIgogICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBocmVmOiAiY2FkYXN0cmFyLXBvc3QiIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW19jKCJiLWJ1dHRvbiIsIFtfdm0uX3YoIiBDYWRhc3RyYXIgUG9zdCAiKV0pXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImItY29udGFpbmVyIiwKICAgICAgICAgICAgeyBhdHRyczogeyBmbHVpZDogIiIgfSB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiYi1yb3ciLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIG10LTMiIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJoMyIsIFtfdm0uX3YoIk8gcXVlIHZvY8OqIHByb2N1cmE/IildKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImItY29sIiwKICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHNtOiAiNiIgfSB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJiLWZvcm0taW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICJEaWdpdGUgbyBxdWUgdm9jw6ogZXN0w6EgcHJvY3VyYW5kbyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdDogIm15LWxpc3QtaWQiLAogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImRhdGFsaXN0IiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBpZDogIm15LWxpc3QtaWQiIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJvcHRpb24iLCBbX3ZtLl92KCJNYW51YWwgT3B0aW9uIildKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLnNpemVzLCBmdW5jdGlvbiAoc2l6ZSwgaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygib3B0aW9uIiwgeyBrZXk6IGluZGV4IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhzaXplKSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAyCiAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImItcm93IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LWNlbnRlciBtdC01IiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiYi1jb2wiLAogICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgY29sczogIjEyIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJiLWJ1dHRvbi1ncm91cCIsCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJiLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAiYi10b29sdGlwIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LWItdG9vbHRpcC5ob3Zlci52LXByaW1hcnkudG9wIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAiVHV0b3JpYWlzIGRvIG3Ds2R1bG8gQmFsY8OjbyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiJ1R1dG9yaWFpcyBkbyBtw7NkdWxvIEJhbGPDo28nIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGlmaWVyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBob3ZlcjogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInYtcHJpbWFyeSI6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdmFyaWFudDogIm91dGxpbmUtcHJpbWFyeSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJCYWxjw6NvIildCiAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJiLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAiYi10b29sdGlwIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LWItdG9vbHRpcC5ob3Zlci52LXN1Y2Nlc3MudG9wIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAiVHV0b3JpYWlzIGRvIG3Ds2R1bG8gQWRtaW5pc3RyYXRpdm8iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIidUdXRvcmlhaXMgZG8gbcOzZHVsbyBBZG1pbmlzdHJhdGl2byciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kaWZpZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhvdmVyOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1zdWNjZXNzIjogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB2YXJpYW50OiAib3V0bGluZS1zdWNjZXNzIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkFkbWluaXN0cmF0aXZvIildCiAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJiLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAiYi10b29sdGlwIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LWItdG9vbHRpcC5ob3Zlci52LWRhbmdlci50b3AiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICJUdXRvcmlhaXMgZG8gbcOzZHVsbyBDYWl4YSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiJ1R1dG9yaWFpcyBkbyBtw7NkdWxvIENhaXhhJyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RpZmllcnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaG92ZXI6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2LWRhbmdlciI6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdmFyaWFudDogIm91dGxpbmUtZGFuZ2VyIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkNhaXhhIildCiAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKSwKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgIF0pLAogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNpZGViYXItaGVhZGVyIiB9LCBbCiAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICJpbWctZmx1aWQiLAogICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2ltZy9sb2dvLXdoaXRlLnBuZyIpIH0sCiAgICAgIH0pLAogICAgICBfYygiaHIiKSwKICAgIF0pCiAgfSwKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygibGkiLCBbCiAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAicmVwbGljYWNvZXMiIH0gfSwgW192bS5fdigiUmVwbGljYcOnw6NvIildKSwKICAgIF0pCiAgfSwKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygibGkiLCBbX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIjIiB9IH0sIFtfdm0uX3YoIldpa2kiKV0pXSkKICB9LApdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}